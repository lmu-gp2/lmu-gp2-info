---
title: "workshop_24-07-05"
author: "Moritz C. Dechamps"
date: "2024-06-30"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Software

### R

<https://cran.rstudio.com/>

-   R ist die Software, welche die Berechnungen ("unter der Motorhaube") durchführt
-   R heißt auch die Programmiersprache, welche von der Software genutzt wird

### RStudio

<https://posit.co/download/rstudio-desktop/>

-   Wir nutzen RStudio, um mit R zu arbeiten, da die Software mehr Funktionalität anbietet
-   Wir brauchen trotzdem R, da RStudio auf unsere R-Installation zugreift

### Packages / Libraries

Eine besondere Stärke von R ist die Möglichkeit *Packages* zu nutzen, die in *Libraries* zur Verfügung gestellt werden (das kann als synonym betrachtet werden).

Packages stammen üblicherweise aus einer von zwei Quellen:

-   CRAN: Diese Packages können direkt in RStudio installiert werden via `install.packages("libraryname")` bzw über den Reiter *Packages* \> *Install*

-   Github: Manche packages werden auf Github zur Verfügung gestellt. In der Regel gibt es auf deren Github-Seite eine Anleitung, wie sie über die RStudio-*Console* installiert werden, z.B.

``` R
# Install remotes if necessary
if (!requireNamespace("remotes")) install.packages("remotes")
# Get package from Github
remotes::install_github("mrzdcmps/changeofevidence")
```

### Updates

Es ist sinnvoll, die Software und Packages regelmäßig zu updaten.
